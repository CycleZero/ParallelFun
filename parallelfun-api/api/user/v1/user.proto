syntax = "proto3";

package user.v1;

import "google/api/annotations.proto";

option go_package = "parallelfun-api/api/user/v1;v1";

service User {
  rpc GetUserById (GetUserByIdRequest) returns (GetUserByIdReply) {
    option (google.api.http) = {
      get: "/v1/users/id/{id}"
    };
  }

  rpc NewUser (NewUserRequest) returns (NewUserReply) {
    option (google.api.http) = {
      post: "/v1/users"
      body: "*"
    };
  }

  rpc GetUserByGameId (GetUserByGameIdRequest) returns (GetUserByGameIdReply) {
    option (google.api.http) = {
      get: "/v1/users/gid/{game_id}"
    };
  }

  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserReply) {
    option (google.api.http) = {
      put: "/v1/users/update"
      body: "*"
    };
  }

  rpc BatchGetUserByGameId (BatchGetUserByGameIdRequest) returns (BatchGetUserByGameIdReply) {
    option (google.api.http) = {
      post: "/v1/users/batch/gid"
      body: "*"
    };
  }

  rpc BatchGetUserById (BatchGetUserByIdRequest) returns (BatchGetUserByIdReply) {
    option (google.api.http) = {
      post: "/v1/users/batch/id"
      body: "*"
    };
  }

  rpc Register (RegisterRequest) returns (RegisterReply) {
    option (google.api.http) = {
      post: "/v1/register"
      body: "*"
    };
  }

  rpc Login (LoginRequest) returns (LoginReply) {
    option (google.api.http) = {
      post: "/v1/login"
      body: "*"
    };
  }

  rpc Logout (LogoutRequest) returns (LogoutReply) {
    option (google.api.http) = {
      post: "/v1/logout"
      body: "*"
    };
  }


  rpc DeleteUser (DeleteUserRequest) returns (DeleteUserReply) {
    option (google.api.http) = {
      delete: "/v1/users/{id}"
    };
  }

}

message UserInfo{
  uint64 id = 1;
  string name = 2;
  string gid= 3;
  string email= 4;
  int32 role=5;
}

message GetUserByIdRequest {
  uint64 id = 1;
}
message GetUserByIdReply {
  repeated UserInfo user= 1;
}

message NewUserRequest{
  string name = 1;
  string email = 2;
  string password = 3;
}

message NewUserReply{
  UserInfo newUser= 1;
}


message GetUserByGameIdRequest {
  string game_id = 1;
}

message GetUserByGameIdReply{
  repeated UserInfo user= 1;
}

message BatchGetUserByGameIdRequest {
  repeated string gids = 1;
}

message BatchGetUserByGameIdReply {
  repeated UserInfo users = 1;
}

message BatchGetUserByIdRequest {
  repeated uint64 ids = 1;
}

message BatchGetUserByIdReply {
  repeated UserInfo users = 1;
}

message RegisterRequest{
  string name = 1;
  string email = 2;
  string password = 3;
}

message RegisterReply{
  UserInfo newUser= 1;
}

message LoginRequest{
  string email = 1;
  string password = 2;
}

message LoginReply{
  UserInfo user= 1;
  string token = 2;
}


message LogoutRequest{
  string id = 1;
  string token = 2;
}
message LogoutReply{
  string message = 1;
}
message UpdateUserRequest{
  UserInfo user= 1;
}
message UpdateUserReply{
  UserInfo user= 1;
  string success = 2;
}
message DeleteUserRequest{
  uint64 id = 1;
}
message DeleteUserReply{
  string message = 1;
}

